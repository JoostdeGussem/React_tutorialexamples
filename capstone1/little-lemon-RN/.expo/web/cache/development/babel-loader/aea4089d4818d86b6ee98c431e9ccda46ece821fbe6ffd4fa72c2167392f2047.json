{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar logo = require(\"../img/Logo.png\");\nexport default function OnboardingScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstName = _useState2[0],\n    setFirstName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var navigation = useNavigation();\n  var handleFirstNameChange = function handleFirstNameChange(text) {\n    setFirstName(text.replace(/[^a-zA-Z]/g, ''));\n  };\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n  };\n  var handleOnboardingComplete = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (firstName.trim() === '') {\n        alert('Please enter your first name.');\n      } else if (!validateEmail(email)) {\n        alert('Please enter a valid email address.');\n      } else {\n        try {\n          var data = {\n            firstName: firstName,\n            email: email\n          };\n          var serializedData = JSON.stringify(data);\n          yield AsyncStorage.setItem('@data', serializedData);\n          yield AsyncStorage.setItem('onboardingStatus', 'completed');\n          alert('Onboarding completed!');\n          navigation.navigate('Profile');\n        } catch (error) {\n          console.log('Error saving onboarding data:', error.message);\n        }\n      }\n    });\n    return function handleOnboardingComplete() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var validateEmail = function validateEmail(email) {\n    var emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return emailRegex.test(email);\n  };\n  var isNextButtonDisabled = firstName.trim() === '' || !validateEmail(email);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Little Lemon\"\n      }), _jsx(View, {\n        children: _jsx(Image, {\n          source: logo,\n          style: styles.logo\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter your name\",\n        value: firstName,\n        onChangeText: handleFirstNameChange\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter your email\",\n        value: email,\n        onChangeText: handleEmailChange\n      }), _jsx(Button, {\n        title: \"Next\",\n        onPress: handleOnboardingComplete,\n        disabled: isNextButtonDisabled\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 50\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  logo: {\n    resizeMode: 'contain'\n  },\n  input: {\n    height: 40,\n    width: 200,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","TextInput","Button","Image","AsyncStorage","useNavigation","jsx","_jsx","jsxs","_jsxs","logo","require","OnboardingScreen","_useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","email","setEmail","navigation","handleFirstNameChange","text","replace","handleEmailChange","handleOnboardingComplete","_ref","_asyncToGenerator","trim","alert","validateEmail","data","serializedData","JSON","stringify","setItem","navigate","error","console","log","message","apply","arguments","emailRegex","test","isNextButtonDisabled","style","styles","container","children","headerContainer","headerText","source","contentContainer","input","placeholder","value","onChangeText","title","onPress","disabled","create","flex","justifyContent","flexDirection","alignItems","marginTop","fontSize","fontWeight","resizeMode","height","width","borderColor","borderWidth","marginBottom","paddingHorizontal"],"sources":["/Users/joostdegussem/Desktop/capstone1/little-lemon-RN/screens/OnboardingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Image } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\n\nconst logo = require('../img/Logo.png');\nexport default function OnboardingScreen() {\n\n    const [firstName, setFirstName] = useState('');\n    const [email, setEmail] = useState('');\n    const navigation = useNavigation();\n\n\n    const handleFirstNameChange = (text) => {\n        setFirstName(text.replace(/[^a-zA-Z]/g, ''));\n    };\n\n    const handleEmailChange = (text) => {\n        setEmail(text);\n    };\n    const handleOnboardingComplete = async () => {\n        if (firstName.trim() === '') {\n            alert('Please enter your first name.');\n        } else if (!validateEmail(email)) {\n            alert('Please enter a valid email address.');\n        } else {\n            try {\n                const data = {\n                    firstName: firstName,\n                    email: email,\n                };\n\n                const serializedData = JSON.stringify(data);\n\n                await AsyncStorage.setItem('@data', serializedData);\n                await AsyncStorage.setItem('onboardingStatus', 'completed');\n                alert('Onboarding completed!');\n                navigation.navigate('Profile');\n            } catch (error) {\n                console.log('Error saving onboarding data:', error.message);\n            }\n        }\n    };\n    const validateEmail = (email) => {\n        const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        return emailRegex.test(email);\n    };\n\n   \n\n    const isNextButtonDisabled = firstName.trim() === '' || !validateEmail(email);\n    return (\n        <View style={styles.container}>\n            <View style={styles.headerContainer}>\n                <Text style={styles.headerText}>Little Lemon</Text>\n                <View>\n                    <Image source={logo} style={styles.logo} />\n                </View>\n            </View>\n            <View style={styles.contentContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter your name\"\n                    value={firstName}\n                    onChangeText={handleFirstNameChange}\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter your email\"\n                    value={email}\n                    onChangeText={handleEmailChange}\n                />\n                <Button\n                    title=\"Next\"\n                    onPress={handleOnboardingComplete}\n                    disabled={isNextButtonDisabled}\n                />\n            </View>\n\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: 50,\n    },\n    headerText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    contentContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1,\n    },\n    logo: {\n        resizeMode: 'contain',\n    },\n    input: {\n        height: 40,\n        width: 200,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10,\n        paddingHorizontal: 10,\n    },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAEnD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,IAAI,GAAGC,OAAO,kBAAkB,CAAC;AACvC,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAEvC,IAAAC,SAAA,GAAkCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA0BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAMG,UAAU,GAAGjB,aAAa,CAAC,CAAC;EAGlC,IAAMkB,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,IAAI,EAAK;IACpCP,YAAY,CAACO,IAAI,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIF,IAAI,EAAK;IAChCH,QAAQ,CAACG,IAAI,CAAC;EAClB,CAAC;EACD,IAAMG,wBAAwB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACzC,IAAIb,SAAS,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACzBC,KAAK,CAAC,+BAA+B,CAAC;MAC1C,CAAC,MAAM,IAAI,CAACC,aAAa,CAACZ,KAAK,CAAC,EAAE;QAC9BW,KAAK,CAAC,qCAAqC,CAAC;MAChD,CAAC,MAAM;QACH,IAAI;UACA,IAAME,IAAI,GAAG;YACTjB,SAAS,EAAEA,SAAS;YACpBI,KAAK,EAAEA;UACX,CAAC;UAED,IAAMc,cAAc,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;UAE3C,MAAM7B,YAAY,CAACiC,OAAO,CAAC,OAAO,EAAEH,cAAc,CAAC;UACnD,MAAM9B,YAAY,CAACiC,OAAO,CAAC,kBAAkB,EAAE,WAAW,CAAC;UAC3DN,KAAK,CAAC,uBAAuB,CAAC;UAC9BT,UAAU,CAACgB,QAAQ,CAAC,SAAS,CAAC;QAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,KAAK,CAACG,OAAO,CAAC;QAC/D;MACJ;IACJ,CAAC;IAAA,gBAtBKf,wBAAwBA,CAAA;MAAA,OAAAC,IAAA,CAAAe,KAAA,OAAAC,SAAA;IAAA;EAAA,GAsB7B;EACD,IAAMZ,aAAa,GAAG,SAAhBA,aAAaA,CAAIZ,KAAK,EAAK;IAC7B,IAAMyB,UAAU,GAAG,6CAA6C;IAChE,OAAOA,UAAU,CAACC,IAAI,CAAC1B,KAAK,CAAC;EACjC,CAAC;EAID,IAAM2B,oBAAoB,GAAG/B,SAAS,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACE,aAAa,CAACZ,KAAK,CAAC;EAC7E,OACIX,KAAA,CAACT,IAAI;IAACgD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1B1C,KAAA,CAACT,IAAI;MAACgD,KAAK,EAAEC,MAAM,CAACG,eAAgB;MAAAD,QAAA,GAChC5C,IAAA,CAACR,IAAI;QAACiD,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAY,CAAM,CAAC,EACnD5C,IAAA,CAACP,IAAI;QAAAmD,QAAA,EACD5C,IAAA,CAACJ,KAAK;UAACmD,MAAM,EAAE5C,IAAK;UAACsC,KAAK,EAAEC,MAAM,CAACvC;QAAK,CAAE;MAAC,CACzC,CAAC;IAAA,CACL,CAAC,EACPD,KAAA,CAACT,IAAI;MAACgD,KAAK,EAAEC,MAAM,CAACM,gBAAiB;MAAAJ,QAAA,GACjC5C,IAAA,CAACN,SAAS;QACN+C,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAE1C,SAAU;QACjB2C,YAAY,EAAEpC;MAAsB,CACvC,CAAC,EACFhB,IAAA,CAACN,SAAS;QACN+C,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEtC,KAAM;QACbuC,YAAY,EAAEjC;MAAkB,CACnC,CAAC,EACFnB,IAAA,CAACL,MAAM;QACH0D,KAAK,EAAC,MAAM;QACZC,OAAO,EAAElC,wBAAyB;QAClCmC,QAAQ,EAAEf;MAAqB,CAClC,CAAC;IAAA,CACA,CAAC;EAAA,CAEL,CAAC;AAEf;AAEA,IAAME,MAAM,GAAGnD,UAAU,CAACiE,MAAM,CAAC;EAC7Bb,SAAS,EAAE;IACPc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EACpB,CAAC;EACDb,eAAe,EAAE;IACbc,aAAa,EAAE,KAAK;IACpBD,cAAc,EAAE,eAAe;IAC/BE,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACf,CAAC;EACDf,UAAU,EAAE;IACRgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACDf,gBAAgB,EAAE;IACdU,cAAc,EAAE,QAAQ;IACxBE,UAAU,EAAE,QAAQ;IACpBH,IAAI,EAAE;EACV,CAAC;EACDtD,IAAI,EAAE;IACF6D,UAAU,EAAE;EAChB,CAAC;EACDf,KAAK,EAAE;IACHgB,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,GAAG;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACvB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}