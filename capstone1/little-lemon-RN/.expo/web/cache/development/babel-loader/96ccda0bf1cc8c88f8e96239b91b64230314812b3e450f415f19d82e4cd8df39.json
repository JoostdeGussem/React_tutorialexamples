{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n  var getIsCompleted = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      isOnboarding = yield AsyncStorage.getItem('onboardingStatus');\n      isOnboarding === 'completed' ? navigation.navigate('Home') : navigation.navigate('Onboarding');\n    });\n    return function getIsCompleted() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    setTimeout(function () {\n      getIsCompleted();\n    }, 3000);\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Image, {\n      source: require(\"../img/SplashLogo.png\"),\n      style: styles.logo\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    resizeMode: 'contain'\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Image","AsyncStorage","jsx","_jsx","SplashScreen","_ref","navigation","getIsCompleted","_ref2","_asyncToGenerator","isOnboarding","getItem","navigate","apply","arguments","setTimeout","style","styles","container","children","source","require","logo","create","flex","justifyContent","alignItems","backgroundColor","width","height","resizeMode"],"sources":["/Users/joostdegussem/Desktop/capstone1/little-lemon-RN/screens/SplashScreen.js"],"sourcesContent":["import React, { useEffect,useState  } from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nconst SplashScreen = ({ navigation }) => {\n  const getIsCompleted = async () => {\n    isOnboarding = await AsyncStorage.getItem('onboardingStatus');\n    isOnboarding === 'completed' ? navigation.navigate('Home') : navigation.navigate('Onboarding')\n}\nuseEffect(() => {\n  setTimeout(()=>{\n    getIsCompleted()\n  },3000 )\n});\n\n  return (\n    <View style={styles.container}>\n      <Image source={require('../img/SplashLogo.png')} style={styles.logo} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    resizeMode: 'contain',\n  },\n});\n\nexport default SplashScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAS,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEnD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGrE,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,IAAMC,cAAc;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACjCC,YAAY,SAAST,YAAY,CAACU,OAAO,CAAC,kBAAkB,CAAC;MAC7DD,YAAY,KAAK,WAAW,GAAGJ,UAAU,CAACM,QAAQ,CAAC,MAAM,CAAC,GAAGN,UAAU,CAACM,QAAQ,CAAC,YAAY,CAAC;IAClG,CAAC;IAAA,gBAHOL,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGrB;EACDlB,SAAS,CAAC,YAAM;IACdmB,UAAU,CAAC,YAAI;MACbR,cAAc,CAAC,CAAC;IAClB,CAAC,EAAC,IAAK,CAAC;EACV,CAAC,CAAC;EAEA,OACEJ,IAAA,CAACJ,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BhB,IAAA,CAACH,KAAK;MAACoB,MAAM,EAAEC,OAAO,wBAAwB,CAAE;MAACL,KAAK,EAAEC,MAAM,CAACK;IAAK,CAAE;EAAC,CACnE,CAAC;AAEX,CAAC;AAED,IAAML,MAAM,GAAGnB,UAAU,CAACyB,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDL,IAAI,EAAE;IACJM,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe1B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}