{"ast":null,"code":"import * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase('little_lemon.db');\nexport var createMenuTable = function createMenuTable() {\n  db.transaction(function (tx) {\n    tx.executeSql(\"CREATE TABLE IF NOT EXISTS menu (\\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\\n        name TEXT,\\n        price REAL,\\n        description TEXT,\\n        image TEXT,\\n        category TEXT\\n      );\", [], function (_, _ref) {\n      var rowsAffected = _ref.rowsAffected;\n      if (rowsAffected > 0) {}\n    });\n  });\n};\nexport var insertMenuItem = function insertMenuItem(menuItem) {\n  var name = menuItem.name,\n    price = menuItem.price,\n    description = menuItem.description,\n    image = menuItem.image,\n    category = menuItem.category;\n  db.transaction(function (tx) {\n    tx.executeSql('INSERT INTO menu (name, price, description, image, category) VALUES (?, ?, ?, ?, ?)', [name, price, description, image, category], function (_, _ref2) {\n      var rowsAffected = _ref2.rowsAffected;\n      if (rowsAffected > 0) {}\n    });\n  });\n};\nexport var getMenuItems = function getMenuItems(callback) {\n  db.transaction(function (tx) {\n    tx.executeSql('SELECT * FROM menu', [], function (_, _ref3) {\n      var rows = _ref3.rows;\n      var menuItems = rows._array;\n      callback(menuItems);\n    });\n  });\n};\nexport var clearMenuTable = function clearMenuTable() {\n  db.transaction(function (tx) {\n    tx.executeSql('DELETE FROM menu', [], function (_, _ref4) {\n      var rowsAffected = _ref4.rowsAffected;\n      if (rowsAffected > 0) {}\n    });\n  });\n};\nexport var getFilteredMenu = function getFilteredMenu(selectedCategories, searchQuery, callback) {\n  db.transaction(function (tx) {\n    var query = 'SELECT * FROM menu';\n    if (selectedCategories.length > 0) {\n      var placeholders = selectedCategories.map(function () {\n        return '?';\n      }).join(',');\n      query += \" WHERE category IN (\" + placeholders + \")\";\n    }\n    if (searchQuery.length > 0) {\n      query += selectedCategories.length > 0 ? ' AND' : ' WHERE';\n      query += \" name LIKE '%\" + searchQuery + \"%'\";\n    }\n    tx.executeSql(query, selectedCategories, function (_, _ref5) {\n      var rows = _ref5.rows;\n      var filteredItems = rows._array;\n      callback(filteredItems);\n    });\n  });\n};\nexport var getCategories = function getCategories(callback) {\n  db.transaction(function (tx) {\n    tx.executeSql('SELECT DISTINCT category FROM menu', [], function (_, _ref6) {\n      var rows = _ref6.rows;\n      var categories = rows._array.map(function (item) {\n        return {\n          name: item.category\n        };\n      });\n      callback(categories);\n    });\n  });\n};\nexport var searchMenuItems = function searchMenuItems(query, selectedCategories, callback) {\n  db.transaction(function (tx) {\n    var sqlQuery = 'SELECT * FROM menu';\n    if (selectedCategories.length > 0) {\n      var placeholders = selectedCategories.map(function () {\n        return '?';\n      }).join(',');\n      sqlQuery += \" WHERE category IN (\" + placeholders + \")\";\n    }\n    if (query.length > 0) {\n      sqlQuery += selectedCategories.length > 0 ? ' AND' : ' WHERE';\n      sqlQuery += \" name LIKE '%\" + query + \"%'\";\n    }\n    tx.executeSql(sqlQuery, selectedCategories, function (_, _ref7) {\n      var rows = _ref7.rows;\n      var filteredItems = rows._array;\n      callback(filteredItems);\n    });\n  });\n};","map":{"version":3,"names":["SQLite","db","openDatabase","createMenuTable","transaction","tx","executeSql","_","_ref","rowsAffected","insertMenuItem","menuItem","name","price","description","image","category","_ref2","getMenuItems","callback","_ref3","rows","menuItems","_array","clearMenuTable","_ref4","getFilteredMenu","selectedCategories","searchQuery","query","length","placeholders","map","join","_ref5","filteredItems","getCategories","_ref6","categories","item","searchMenuItems","sqlQuery","_ref7"],"sources":["/Users/joostdegussem/Desktop/capstone1/little-lemon-RN/database.js"],"sourcesContent":["import * as SQLite from 'expo-sqlite';\n\nconst db = SQLite.openDatabase('little_lemon.db');\n\nexport const createMenuTable = () => {\n  db.transaction(tx => {\n    tx.executeSql(\n      `CREATE TABLE IF NOT EXISTS menu (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT,\n        price REAL,\n        description TEXT,\n        image TEXT,\n        category TEXT\n      );`,\n      [],\n      (_, { rowsAffected }) => {\n        if (rowsAffected > 0) {\n        }\n      }\n    );\n  });\n};\n\nexport const insertMenuItem = (menuItem) => {\n  const { name, price, description, image, category } = menuItem;\n  db.transaction(tx => {\n    tx.executeSql(\n      'INSERT INTO menu (name, price, description, image, category) VALUES (?, ?, ?, ?, ?)',\n      [name, price, description, image, category],\n      (_, { rowsAffected }) => {\n        if (rowsAffected > 0) {\n        }\n      }\n    );\n  });\n};\n\nexport const getMenuItems = (callback) => {\n  db.transaction(tx => {\n    tx.executeSql('SELECT * FROM menu', [], (_, { rows }) => {\n      const menuItems = rows._array;\n      callback(menuItems);\n    });\n  });\n};\n\nexport const clearMenuTable = () => {\n  db.transaction(tx => {\n    tx.executeSql('DELETE FROM menu', [], (_, { rowsAffected }) => {\n      if (rowsAffected > 0) {\n      }\n    });\n  });\n};\n\nexport const getFilteredMenu = (selectedCategories, searchQuery, callback) => {\n  db.transaction(tx => {\n    let query = 'SELECT * FROM menu';\n\n    if (selectedCategories.length > 0) {\n      const placeholders = selectedCategories.map(() => '?').join(',');\n      query += ` WHERE category IN (${placeholders})`;\n    }\n\n    if (searchQuery.length > 0) {\n      query += selectedCategories.length > 0 ? ' AND' : ' WHERE';\n      query += ` name LIKE '%${searchQuery}%'`;\n    }\n\n    tx.executeSql(query, selectedCategories, (_, { rows }) => {\n      const filteredItems = rows._array;\n      callback(filteredItems);\n    });\n  });\n};\n\nexport const getCategories = (callback) => {\n  db.transaction(tx => {\n    tx.executeSql('SELECT DISTINCT category FROM menu', [], (_, { rows }) => {\n      const categories = rows._array.map(item => ({ name: item.category }));\n      callback(categories);\n    });\n  });\n};\n\nexport const searchMenuItems = (query, selectedCategories, callback) => {\n  db.transaction(tx => {\n    let sqlQuery = 'SELECT * FROM menu';\n\n    if (selectedCategories.length > 0) {\n      const placeholders = selectedCategories.map(() => '?').join(',');\n      sqlQuery += ` WHERE category IN (${placeholders})`;\n    }\n\n    if (query.length > 0) {\n      sqlQuery += selectedCategories.length > 0 ? ' AND' : ' WHERE';\n      sqlQuery += ` name LIKE '%${query}%'`;\n    }\n\n    tx.executeSql(sqlQuery, selectedCategories, (_, { rows }) => {\n      const filteredItems = rows._array;\n      callback(filteredItems);\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}